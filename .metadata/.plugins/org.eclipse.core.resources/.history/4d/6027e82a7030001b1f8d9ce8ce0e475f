package Practice.Lesson.ThreadPart.Snynchronized;

public class SynchroTest {

	public static void main(String[] args) {
		Runnable run = new A();
		
		Thread t1 = new Thread(run);
		Thread t2 = new Thread(run);
		
		t1.start();
		t2.start();
	}
	/*
	 * balance : 800
		balance : 800
		balance : 600
		balance : 300
		balance : 0
		balance : -300  ====> 예금 계좌가 음수가 나온다.
		Thread t1, t2 모두 Runnable을 구현하는 run객체를 파라미터로 받는데, run은 Account객체를 공유객체로 지닌다.
	 */

}

class Account {
	int balance = 1000;
	
	public synchronized void withdraw(int money) {
		if(balance >= money) {
			try {Thread.sleep(1000);} catch (Exception e) {}
			balance -= money;
		}
	}
}

class A implements Runnable	{
	Account ac = new Account();
	
	@Override
	public void run() {
		while(ac.balance > 0 ) {
			int money = (int)(Math.random() * 3 + 1) * 100;
			ac.withdraw(money);
			System.out.println("balance : " + ac.balance);
		}
	}
}